openapi: 3.0.0
info:
  title: HUSTPass authentication API
  version: 1.0.0
servers:
  - url: https://paulkm.ac.cn/hust_ledger
    description: Production server
paths:
  /login:
      post:
        summary: Login
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
                  lt:
                    type: string
                    description: Login token, should be the same as in the captcha response
                  jsessionid:
                    type: string
                    description: Login JSESSIONID, should be the same as in the captcha response
                  code:
                    type: string
                    description: Captcha code
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LoginResponse'
                example:
                  status: 200
                  msg: Success
                  castgc: TGT-U...-...-...-cas
          '400':
            description: Bad request
          '403':
            description: Username, password or captcha code is incorrect
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LoginResponse'
                example:
                  status: 403
                  msg: Wrong username, password or captcha.
                  castgc: null
          '500':
            description: Internal Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LoginResponse'
  /login/captcha:
    get:
      summary: Get captcha
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaResponse'
              example:
                status: 200
                msg: Success
                ticket: LT-...-...-cas
                jsessionid: ...!...
                img_base64: ...
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaResponse'
        '400':
          description: Bad request
  /report:
    get:
      summary: Report
      parameters:
        - name: castgc
          in: header
          required: true
          schema:
            type: string
          description: castgc for HUSTPASS
        - name: period
          in: query
          required: true
          schema:
            type: string
            enum: [week, month, year]
          description: Period of the report
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
              examples:
                Created:
                  status: 201
                  msg: Report generation queued
                  data: null
                Waiting:
                  status: 201
                  msg: Report is being generated
                  data: null
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
              example:
                status: 200
                msg: Success
                data:
                  date: '202101'
                  balance: 100
                  total_expense: 100
                  total_count: 1
                  top_expense:
                    time: 20210101000000
                    location: 'Canteen'
                    amount: 100
                  top_count:
                    location: 'Canteen'
                    amount: 100
                    count: 100
                  trend:
                    - count: 1
                      expense: 100
                    - count: 1
                      expense: 100
                    - count: 1
                      expense: 100
                  cafeteria_count: 1
                  cafeteria_amount: 100.0
                  groceries_count: 0
                  groceries_amount: 0.0
                  logistics_count: 0
                  logistics_amount: 0.0
                  other_count: 0
                  other_amount: 0.0
                  breakfast:
                    count: 1
                    amount: 100
                  lunch:
                    count: 1
                    amount: 100
                  dinner:
                    count: 1
                    amount: 100
                  midnight_snack:
                    count: 1
                    amount: 100
        '403':
          description: castgc is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
              example:
                status: 403
                msg: castgc is invalid
                data: null
        '500':
          description: Internal Error
        '400':
          description: Bad request
  /tags:
    get:
      summary: Get tags list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
              example:
                - mercacc: '123456'
                  tag: 'CAF'
                - mercacc: '123456'
                  tag: 'GRO'
                - mercacc: '123456'
                  tag: 'LOG'
                - mercacc: '123456'
                  tag: 'OTH'
        '500':
          description: Internal Error


components:
  schemas:
    LoginResponse:
      type: object
      properties:
        status:
          type: integer
          description: Status code
        msg:
          type: string
          description: Message
        castgc:
          type: string
          description: CASTGC for HUSTPASS
    CaptchaResponse:
      type: object
      properties:
        status:
          type: integer
          description: Status code
        msg:
          type: string
          description: Message
        ticket:
          type: string
          description: lt for following login request
        jsessionid:
          type: string
          description: JSESSIONID for following login request
        img_base64:
          type: string
          description: Base64 encoded captcha image
    Tag:
      type: object
      properties:
        mercacc:
          type: string
          description: Merchant account 
        tag:
          type: string
          description: Tag, can be one of [CAF, GRO, LOG, OTH]
    Expense:
      type: object
      properties:
        time:
          type: string
          description: Time YYYYMMDDHHMMSS
        location:
          type: string
          description: Location
        amount:
          type: number
          description: Amount
    Trend:
      type: object
      properties:
        count:
          type: integer
          description: Total transaction count
        expense:
          type: number
          description: Amount
    Meal:
      type: object
      properties:
        count:
          type: integer
          description: Count
        amount:
          type: number
          description: Amount
    Trans:
      type: object
      properties:
        location:
          type: string
          description: Location
        amount:
          type: number
          description: Amount
        count:
          type: integer
          description: Count
    ReportResponse:
      type: object
      properties:
        status:
          type: integer
          description: Status code
        msg:
          type: string
          description: Message
        data:
          type: object
          description: Report data
          properties:
            date:
              type: String
              description: Date, for weekly report is YYYYWW, for monthly report is YYYYMM, for yearly report is YYYY
            balance:
              type: number
              description: Balance
            total_expense:
              type: integer
              description: Total expense during the specified period
            total_count:
              type: integer
              description: Total count of expenses during the specified period
            top_expense:
              description: One expense that has the highest amount
              $ref: '#/components/schemas/Expense'
            top_count:
              description: One location that has the most expenses happened
              $ref: '#/components/schemas/Trans'
            trend:
              type: array
              description: Expense trend of 3 periods, in ascending order of time
              items:
                $ref: '#/components/schemas/Trend'
            cafeteria_count:
              type: integer
              description: Total count of expenses in cafeteria
            cafeteria_amount:
              type: number
              description: Total expense in cafeteria
            groceries_count:
              type: integer
              description: Total count of expenses in groceries
            groceries_amount:
              type: number
              description: Total expense in groceries
            logistics_count:
              type: integer
              description: Total count of expenses in logistics
            logistics_amount:
              type: number
              description: Total expense in logistics
            other_count:
              type: integer
              description: Total count of expenses in other locations
            other_amount:
              type: number
              description: Total expense in other locations
            breakfast:
              description: Breakfast expense 6:00-9:00
              $ref: '#/components/schemas/Meal'
            lunch:
              description: Lunch expense 11:00-14:00
              $ref: '#/components/schemas/Meal'
            dinner:
              description: Dinner expense 17:00-20:00
              $ref: '#/components/schemas/Meal'
            midnight_snack:
              description: Midnight snack expense 22:00-24:00
              $ref: '#/components/schemas/Meal'
